// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Models;

namespace WebApplication3.Migrations
{
    [DbContext(typeof(UserDetailsContext))]
    [Migration("20210513023527_DeviceCreate")]
    partial class DeviceCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication3.Models.DeviceDetails", b =>
                {
                    b.Property<int>("DeviceDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ZoneID")
                        .HasColumnType("int");

                    b.HasKey("DeviceDetailsID");

                    b.HasIndex("ZoneID");

                    b.ToTable("DeviceDetails");
                });

            modelBuilder.Entity("WebApplication3.Models.SiteDetails", b =>
                {
                    b.Property<int>("SiteDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SiteDetailsID");

                    b.ToTable("SiteDetails");
                });

            modelBuilder.Entity("WebApplication3.Models.UserDetails", b =>
                {
                    b.Property<int>("UserDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("UserDetailsID");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("WebApplication3.Models.ZoneDetails", b =>
                {
                    b.Property<int>("ZoneDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SiteID")
                        .HasColumnType("int");

                    b.Property<string>("TypeAgri")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZoneDetailsID");

                    b.HasIndex("SiteID");

                    b.ToTable("ZoneDetails");
                });

            modelBuilder.Entity("WebApplication3.Models.DeviceDetails", b =>
                {
                    b.HasOne("WebApplication3.Models.ZoneDetails", "Zone")
                        .WithMany("Device")
                        .HasForeignKey("ZoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("WebApplication3.Models.ZoneDetails", b =>
                {
                    b.HasOne("WebApplication3.Models.SiteDetails", "Site")
                        .WithMany("Zone")
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("WebApplication3.Models.SiteDetails", b =>
                {
                    b.Navigation("Zone");
                });

            modelBuilder.Entity("WebApplication3.Models.ZoneDetails", b =>
                {
                    b.Navigation("Device");
                });
#pragma warning restore 612, 618
        }
    }
}
